<?php

namespace App\Repositories ;

use Illuminate\Database\QueryException;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use App\Models\Stat ;
use App\Models\Map ;
use App\Models\Mode ;
use App\Models\Brawler ;

class BrawlStarsRepository {
    
    //properties
    static $updateDate ;

    //constructor
    public function __construct() {

        $currentDate = gmdate();

        if($currentDate > $updateDate)
              $this->DeleteOldStats() ;

    }

    //methods

    public function processBattleData($battle){

        $data =[] ;
        $map = $battle['map'] ;
        $map_id = Map::where('name', $map)->first() ;

        if ($map_id === null) {

            $mode = $battle['mode'] ;
            $mode_id = Mode::where('name', $mode)->first() ;

            if($mode_id === null)
               addMode($mode) ;
            
            $mode_id = Mode::where('name', $mode)->first() ;   
            addMap($map, $mode_id)
        }

        array_push($data, $map_id );

        $brawlers = array_filter($battle, fn($key) => substr($key,0,6) == 'brawler', ARRAY_FILTER_USE_KEY);

        foreach($brawlers as $brawler) {

            $brawler_id = Brawler::where('name', $brawler)->first() ;

            if ($brawler_id === null) {

               addBrawler($brawler, $map_id);
               $brawler_id = Brawler::where('name', $brawler)->first() ;
            }   
            
            array_push($data, $brawler_id);
        }
        
        return $data ;
    }

    public function lodToStat($battle) {

        $result = $battle['result'];
        
        if($result === 'draw') {

            for($i=1 ; $i<7 ; $i++) {

                $brawler = $battle['brawler'.$i];
                $brawler_id = Brawler::where('name', $brawler)->id ;

                Stat::where('map_id', $map_id)
                ->where('brawler_id', $brawler_id)
                ->increment('number_picks');
            }
        }

        else {

            for($i=1 ; $i<7 ; $i++) {

                $brawler = $battle['brawler'.$i];
                $brawler_id = Brawler::where('name', $brawler)->id ;

                Stat::where('map_id', $map_id)
                ->where('brawler_id', $brawler_id)
                ->increment('number_of_picks');

                if ($i <4) {

                   Stat::where('map_id', $map_id)
                   ->where('brawler_id', $brawler_id)
                   ->increment('number_of_wins');
                }  
            }
        }       

    }

    public function loadToDataBase($data) {

        foreach($data as $battle) {

                  $this->loadToStat($battle);
        }


    }


}